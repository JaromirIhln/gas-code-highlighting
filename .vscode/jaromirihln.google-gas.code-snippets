{
  "gs-helloSvete": {
    "prefix": "gshello",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci, kter√° zap√≠≈°e 'Ahoj, Svete!' do A1.",
      " */",
      "function ahojSvete() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  sheet.getRange(\"A1\").setValue(\"Ahoj, Svete!\");",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci, kter√° zap√≠≈°e 'Ahoj, Svete!' do A1."
  },
  "gs-barvaPozadi": {
    "prefix": "gscolor",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro nastaven√≠ barvy pozad√≠ bu≈àky A1 na ≈ælutou.",
      " */",
      "function nastavBarvuPozadi() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  sheet.getRange(\"A1\").setBackground(\"#FFFF00\"); // ≈Ωlut√° barva",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro nastaven√≠ barvy pozad√≠ bu≈àky A1 na ≈ælutou."
  },
  "gs-vypisDatum": {
    "prefix": "gsdate",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro zaps√°n√≠ aktu√°ln√≠ho data do B1.",
      " */",
      "function vypisAktualniDatum() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  var dnes = new Date();",
      "  sheet.getRange(\"B1\").setValue(dnes);",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro zaps√°n√≠ aktu√°ln√≠ho data do B1."
  },
  "gs-zarovnejText": {
    "prefix": "gsalign",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro zarovn√°n√≠ textu v A1:B1 na st≈ôed.",
      " */",
      "function zarovnejTextNaStred() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  sheet.getRange(\"A1:B1\").setHorizontalAlignment(\"center\");",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro zarovn√°n√≠ textu v A1:B1 na st≈ôed."
  },
  "gs-nastavHlavicky": {
    "prefix": "gsheading",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro nastaven√≠ hlaviƒçek v A2:D2.",
      " */",
      "function nastavHlavicky() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  var hlavicky = [[\"Den v t√Ωdnu\", \"Datum\", \"pozn√°mka\", \"sv√°tek\"]];",
      "  sheet.getRange(\"A2:D2\").setValues(hlavicky);",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro nastaven√≠ hlaviƒçek v A2:D2."
  },
  "gs-vyplnTyden": {
    "prefix": "gsweek",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro vyplnƒõn√≠ t√Ωdne v tabulce s daty od 24.9.2025",
      " * vƒçetnƒõ dne v t√Ωdnu, pozn√°mky a sv√°tku.",
      " */",
      "function vyplnTyden() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  var startDate = new Date(2025, 9, 24); // 9 = ≈ô√≠jen (0-indexovan√©, z√°≈ô√≠ je 8)",
      "  var data = [];",
      "  var dny = [\"St≈ôeda\", \"ƒåtvrtek\", \"P√°tek\", \"Sobota\", \"Nedƒõle\", \"Pondƒõl√≠\", \"√öter√Ω\"];",
      "  var notes = [",
      "    \"pohoda\",",
      "    \"d≈ôina\",",
      "    \"je≈°tƒõ z√≠tra\",",
      "    \"z√≠tra Praha\",",
      "    \"Praha 'V√Ωlet'\",",
      "    \"zase ≈°ichta\",",
      "    \"koneƒçnƒõ volno\"",
      "  ];",
      "  var holiday = [",
      "    \"Jarom√≠r\",",
      "    \"Zlata\",",
      "    \"Andrea/Ond≈ôejka\",",
      "    \"Jon√°≈°\",",
      "    \"V√°clav/V√°clava\",",
      "    \"Michal/Michael\",",
      "    \"Jeron√Ωm/Jeronym/Jarol√≠m\"",
      "  ];",
      "  for (var i = 0; i < 7; i++) {",
      "    var datum = new Date(startDate);",
      "    datum.setDate(startDate.getDate() + i);",
      "    var denVTydnu = dny[i];",
      "    data.push([denVTydnu, datum, notes[i], holiday[i]]);",
      "  }",
      "  sheet.getRange(\"A3:D9\").setValues(data);",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro vyplnƒõn√≠ t√Ωdne v tabulce."
  },
  "Vytvo≈ô Google Formul√°≈ô": {
    "prefix": "gsform",
    "body": [
      "/**",
      " * Vytvo≈ô√≠ nov√Ω Google Formul√°≈ô.",
      " */",
      "function vytvorFormular() {",
      "  var form = FormApp.create('Nov√Ω formul√°≈ô');",
      "  form.addTextItem().setTitle('Jm√©no');",
      "  form.addMultipleChoiceItem()",
      "      .setTitle('Vyberte mo≈ænost')",
      "      .setChoiceValues(['A', 'B', 'C']);",
      "  Logger.log('üìù Formul√°≈ô vytvo≈ôen: ' + form.getPublishedUrl());",
      "}"
    ],
    "description": "üìùVytvo≈ô√≠ nov√Ω Google Formul√°≈ô s jedn√≠m textov√Ωm a jedn√≠m v√Ωbƒõrov√Ωm polem."
  },
  "gs-posliEmail": {
    "prefix": "gsmail",
    "body": [
      "/**",
      " * Vlo≈æ√≠ funkci pro odesl√°n√≠ emailu.",
      " */",
      "function posliEmail() {",
      " //‚ö° Zmƒõ≈à na skuteƒçnou emailovou adresu - ale i tak doraz√≠ zpr√°va'adresa nebyla nalezena'",
      "  var adresat = 'priklad@email.com';",
      "  var predmet = 'Zpr√°va z Google Apps Script';",
      "  var zprava = 'Ahoj,\\n\\nToto je automatick√° zpr√°va.\\n\\nS pozdravem';",
      "  GmailApp.sendEmail(adresat, predmet, zprava);",
      "  Logger.log('üì¨Email odesl√°n na: ' + adresat + ' üïµÔ∏è‚Äç‚ôÄÔ∏è');",
      "}"
    ],
    "description": "Po≈°le email pomoc√≠ GmailApp."
  },
  "gs-emailSPrilohou": {
    "prefix": "gsmail-attachment",
    "body": [
      "/**",
      " * Po≈°le email s p≈ô√≠lohou ze souboru na Google Drive.",
      " */",
      "function posliEmailSPrilohou() {",
      "  var adresat = 'priklad@email.com';// Zmƒõ≈à na skuteƒçnou emailovou adresu",
      "  var predmet = 'Email s p≈ô√≠lohou';",
      "  var zprava = 'V p≈ô√≠loze najde≈° soubor z Google Drive.';",
      "  var soubor = DriveApp.getFileById('ID_SOUBORU_NA_DRIVE');//Je zapot≈ôeb√≠ skuteƒçn√© ID, kter√© z√≠sk√°te funkc√≠ 'praceSeSouboryNaDrive'",
      "  GmailApp.sendEmail(adresat, predmet, zprava, {",
      "    attachments: [soubor.getBlob()]",
      "  });",
      "  Logger.log('üì©üìé Email s p≈ô√≠lohou odesl√°n.üìù');",
      "}"
    ],
    "description": "Po≈°le email s p≈ô√≠lohou ze souboru na Google Drive."
  },
  "gs-praceSeSoubory": {
    "prefix": "gsdrive",
    "body": [
      "/**",
      " * Projde v≈°echny soubory ve slo≈æce na Google Drive. Defaultnƒõ root slo≈æka,",
      " * pokud chce≈° proch√°zet jinou slo≈æku, nahraƒè 'getFolderById(ID_SLOZKY)' skuteƒçn√Ωm ID slo≈æky",
      " * kter√© jsi z√≠skal ve v√Ωpisu.",
      " */",
      "function praceSeSouboryNaDrive() {",
      "  // Pou≈æij root slo≈æku, toto ti vyp√≠≈°e ID v≈°ech soubor≈Ø, nahraƒè",
      "  // 'getRootFolder() - getFolderById(ID_SLOZKY)' skuteƒçn√© ID",
      "  // kter√° jsi pr√°vƒõ z√≠skal ve v√Ωpisu",
      "  var slozka = DriveApp.getRootFolder(); // nebo DriveApp.getFolderById('v√°≈°_skuteƒçn√Ω_folder_id');",
      "  var soubory = slozka.getFiles();",
      "  ",
      "  while (soubory.hasNext()) {",
      "    var soubor = soubory.next();",
      "    Logger.log('üïµÔ∏è‚Äç‚ôÄÔ∏è N√°zev: ' + soubor.getName() + ', ID: ' + soubor.getId());",
      "  }",
      "}"
    ],
    "description": "Projde v≈°echny soubory ve slo≈æce na Google Drive. Defaultnƒõ root slo≈æka."
  },
  "gs-vytvorSlozku": {
    "prefix": "gsfolder",
    "body": [
      "/**",
      " * Vytvo≈ô√≠ novou slo≈æku na Google Drive s aktu√°ln√≠m datem.",
      " */",
      "function vytvorSlozku() {",
      "  var nazevSlozky = 'Nov√° slo≈æka ' + new Date().toLocaleDateString();",
      "  var novaSlozka = DriveApp.createFolder(nazevSlozky);",
      "  Logger.log('Slo≈æka vytvo≈ôena: ' + novaSlozka.getName());",
      "  Logger.log('üìÇID slo≈æky: ' + novaSlozka.getId());",
      "}"
    ],
    "description": "Vytvo≈ô√≠ novou slo≈æku na Google Drive s aktu√°ln√≠m datem."
  },
  "gs-udalostKalendar": {
    "prefix": "gscalendar-event",
    "body": [
      "/**",
      " * Vytvo≈ô√≠ novou ud√°lost v Google Kalend√°≈ôi.",
      " */",
      "function vytvorUdalost() {",
      "  var kalendar = CalendarApp.getDefaultCalendar();",
      "  var nazev = 'Sch≈Øzka z Apps Script';",
      "  var zacatek = new Date();",
      "  zacatek.setHours(zacatek.getHours() + 1); // za hodinu",
      "  var konec = new Date(zacatek.getTime() + (60 * 60 * 1000)); // +1 hodina",
      "  ",
      "  kalendar.createEvent(nazev, zacatek, konec, {",
      "    description: 'Ud√°lost vytvo≈ôen√° pomoc√≠ Google Apps Script',",
      "    location: 'Online'",
      "  });",
      "  Logger.log('‚ö°üóìÔ∏èUd√°lost vytvo≈ôena: ' + nazev);",
      "}"
    ],
    "description": "üóìÔ∏è Vytvo≈ô√≠ novou ‚ö°ud√°lost v Google Kalend√°≈ôi."
  },
  "gs-logovani": {
    "prefix": "gslog",
    "body": [
      "/**",
      " * Podrobn√© logov√°n√≠ s ƒçasem a form√°tov√°n√≠m.",
      " */",
      "function podrobneLogovani() {",
      "  var cas = new Date().toLocaleString();",
      "  var zprava = 'D≈Øle≈æit√° informace';",
      "  var data = {kl√≠ƒç: 'hodnota', ƒç√≠slo: 42};",
      "  ",
      "  Logger.log('=== LOG ' + cas + ' ===');",
      "  Logger.log('Zpr√°va: ' + zprava);",
      "  Logger.log('Data: ' + JSON.stringify(data));",
      "  Logger.log('========================');",
      "}"
    ],
    "description": "üìù Strukturovan√© logov√°n√≠ s ƒçasem a form√°tov√°n√≠m."
  },
  "gs-casovyTrigger": {
    "prefix": "gs-timeTrigger",
    "body": [
      "/**",
      " * Nastav√≠ ƒçasov√Ω trigger pro pravideln√© spou≈°tƒõn√≠ funkce.",
      " */",
      "function nastavCasovyTrigger() {",
      "  // Sma≈æe star√© triggery pro tuto funkci",
      "  var triggery = ScriptApp.getProjectTriggers();",
      "  for (var i = 0; i < triggery.length; i++) {",
      "    if (triggery[i].getHandlerFunction() === 'pravidelnaFunkce') {",
      "      ScriptApp.deleteTrigger(triggery[i]);",
      "    }",
      "  }",
      "  ",
      "  // Vytvo≈ô√≠ nov√Ω trigger - ka≈æd√Ω den v 9:00",
      "  ScriptApp.newTrigger('pravidelnaFunkce')",
      "    .timeBased()",
      "    .everyDays(1)",
      "    .atHour(9)",
      "    .create();",
      "  ",
      "  Logger.log('ƒåasov√Ω trigger nastaven.');",
      "}",
      "",
      "function pravidelnaFunkce() {",
      "  Logger.log('‚è∞ Pravideln√° funkce spu≈°tƒõna: ' + new Date());",
      "}"
    ],
    "description": "Nastav√≠ ƒçasov√Ω trigger pro pravideln√© spou≈°tƒõn√≠ funkce."
  },
  "gs-menuUI": {
    "prefix": "gsui-customMenu",
    "body": [
      "/**",
      " * Vytvo≈ô√≠ vlastn√≠ menu v u≈æivatelsk√©m rozhran√≠ vƒçetnƒõ ikonek.",
      " */",
      "function vytvorCustomMenu() {",
      "  var ui = SpreadsheetApp.getUi();",
      "  ui.createMenu('üöÄ Moje N√°stroje')",
      "    .addItem('üìä Anal√Ωza dat', 'analyzujData')",
      "    .addItem('üìß Po≈°li report', 'posliReport')",
      "    .addSeparator()",
      "    .addSubMenu(ui.createMenu('‚öôÔ∏è Nastaven√≠')",
      "      .addItem('üîß Konfigurace', 'otevriKonfiguraci')",
      "      .addItem('‚ÑπÔ∏è O aplikaci', 'zobrazInfo'))",
      "    .addToUi();",
      "}",
      "",
      "function analyzujData() {",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('Anal√Ωza dat spu≈°tƒõna!');",
      "}",
      "",
      "function posliReport() {",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('Report odesl√°n!');",
      "}"
    ],
    "description": "Vytvo≈ô√≠ pokroƒçil√© u≈æivatelsk√© menu s submenu a emojis."
  },
  "gs-filtrData": {
    "prefix": "gsfilter",
    "body": [
      "/**",
      " * Filtruje data podle krit√©ria a vytvo≈ô√≠ nov√Ω list s v√Ωsledky.",
      " */",
      "function filtrujData() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  var data = sheet.getDataRange().getValues();",
      "  var filtrovanaData = [];",
      "  ",
      "  // P≈ôid√° hlaviƒçku",
      "  filtrovanaData.push(data[0]);",
      "  ",
      "  // Filtruje ≈ô√°dky (nap≈ô√≠klad kde sloupec B obsahuje 'Praha')",
      "  for (var i = 1; i < data.length; i++) {",
      "    if (data[i][1] && data[i][1].toString().includes('Praha')) {",
      "      filtrovanaData.push(data[i]);",
      "    }",
      "  }",
      "  ",
      "  // Zap√≠≈°e filtrovan√° data na nov√Ω list",
      "  var novySheet = SpreadsheetApp.getActiveSpreadsheet().insertSheet('Filtrovan√° data');",
      "  novySheet.getRange(1, 1, filtrovanaData.length, filtrovanaData[0].length).setValues(filtrovanaData);",
      "  ",
      "  Logger.log('Data filtrov√°na. Nalezeno ' + (filtrovanaData.length - 1) + ' z√°znam≈Ø.');",
      "}"
    ],
    "description": "Filtruje data podle krit√©ria a vytvo≈ô√≠ nov√Ω list s v√Ωsledky."
  },
  "gs-seradData": {
    "prefix": "gssort",
    "body": [
      "/**",
      " * Se≈ôad√≠ data podle v√≠ce sloupc≈Ø s mo≈ænost√≠ vzestupn√©ho/sestupn√©ho ≈ôazen√≠.",
      " */",
      "function seradData() {",
      "  var sheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();",
      "  var rozsah = sheet.getDataRange();",
      "  ",
      "  // Se≈ôad√≠ podle sloupce A (vzestupnƒõ) a pak podle sloupce B (sestupnƒõ)",
      "  rozsah.sort([",
      "    {column: 1, ascending: true},   // Sloupec A vzestupnƒõ",
      "    {column: 2, ascending: false}   // Sloupec B sestupnƒõ",
      "  ]);",
      "  ",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('Data se≈ôazena!', 'Hotovo', 3);",
      "}"
    ],
    "description": "Se≈ôad√≠ data podle v√≠ce sloupc≈Ø s mo≈ænost√≠ vzestupn√©ho/sestupn√©ho ≈ôazen√≠."
  },
  "gs-appsscriptManifest": {
    "prefix": "gsmanifest",
    "body": [
      "/**",
      " *‚ùóUpraven√≠ appsscript.json manifest s Gmail opr√°vnƒõn√≠mi pro pos√≠l√°n√≠ email≈Ø ",
      " * a dal≈°√≠ bƒõ≈æn√° opr√°vnƒõn√≠ nutn√° pro tyto √∫ryvky k√≥d≈Ø.pozn√°mka: Nezapome≈à zmƒõnit timeZone na tvou aktu√°ln√≠ z√≥nu.",
      " * pozn√°mka: Nezapome≈à zmƒõnit timeZone na tvou aktu√°ln√≠ z√≥nu. Defaultnƒõ je 'America/New_York'. ",
      " * -‚ùózkop√≠ruj do souboru appsscript.json. - dal≈°√≠ informace o manifestu: https://developers.google.com/apps-script/manifest",
      " */",
      "{",
      "  \"timeZone\": \"Europe/Prague\",",
      "  \"dependencies\": {",
      "    \"enabledAdvancedServices\": []",
      "  },",
      "  \"oauthScopes\": [",
      "    \"https://www.googleapis.com/auth/spreadsheets\",",
      "    \"https://www.googleapis.com/auth/drive\",",
      "    \"https://www.googleapis.com/auth/gmail.send\",",
      "    \"https://www.googleapis.com/auth/calendar\",",
      "    \"https://www.google.com/calendar/feeds\"",
      "    \"https://www.googleapis.com/auth/drive.file\"",
      "  ],",
      "  \"exceptionLogging\": \"STACKDRIVER\",",
      "  \"runtimeVersion\": \"V8\"",
      "}"
    ],
    "description": "Vytvo≈ô√≠ appsscript.json manifest s Gmail opr√°vnƒõn√≠mi pro pos√≠l√°n√≠ email≈Ø."
  },
  "gs-important": {
    "prefix": "gsimportant",
    "body": [
      "/**",
      " * ‚ùó D≈ÆLE≈ΩIT√â: ${1:Popis d≈Øle≈æit√© informace}",
      " * ",
      " * ${2:Detailn√≠ vysvƒõtlen√≠ proƒç je to d≈Øle≈æit√©}",
      " */",
      "${3:// Zde pokraƒçuj s k√≥dem}"
    ],
    "description": "Vlo≈æ√≠ koment√°≈ô s ikonkou vyk≈ôiƒçn√≠ku pro oznaƒçen√≠ d≈Øle≈æit√Ωch ƒç√°st√≠ k√≥du."
  },
  "gs-qrGenerator": {
    "prefix": "gs-qrCode",
    "body": [
      "/**",
      " * Generuje QR k√≥d pro zadan√Ω text pomoc√≠ QR-Server API.",
      " * Google Charts API u≈æ nen√≠ dostupn√©, proto pou≈æ√≠v√°me alternativu.",
      " */",
      "function vygenerujQRKod() {",
      "  var text = '${1:https://github.com/JaromirIhln}'; // Text pro QR k√≥d",
      "  var velikost = ${2:120}; // Velikost QR k√≥du v pixelech",
      "  ",
      "  // Pou≈æit√≠ QR-Server API jako alternativy k Google Charts",
      "  var qrUrl = 'https://api.qrserver.com/v1/create-qr-code/?' +",
      "    'size=' + velikost + 'x' + velikost +",
      "    '&data=' + encodeURIComponent(text);",
      "  ",
      "  Logger.log('üî≤ QR k√≥d URL: ' + qrUrl);",
      "  ",
      "  try {",
      "    // Vlo≈æ QR k√≥d jako obr√°zek do Sheets",
      "    var response = UrlFetchApp.fetch(qrUrl);",
      "    if (response.getResponseCode() === 200) {",
      "      var blob = response.getBlob();",
      "      var sheet = SpreadsheetApp.getActiveSheet();",
      "      sheet.insertImage(blob, ${3:2}, ${4:2}); // ≈ò√°dek, sloupec",
      "      ",
      "      SpreadsheetApp.getActiveSpreadsheet().toast('QR k√≥d vygenerov√°n!', 'Hotovo', 3);",
      "    } else {",
      "      throw new Error('API vratilo chybu: ' + response.getResponseCode());",
      "    }",
      "  } catch (error) {",
      "    Logger.log('‚ùå Chyba p≈ôi generov√°n√≠ QR k√≥du: ' + error.toString());",
      "    SpreadsheetApp.getActiveSpreadsheet().toast('Chyba p≈ôi generov√°n√≠ QR k√≥du: ' + error.toString(), 'Chyba', 5);",
      "  }",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro generov√°n√≠ QR k√≥du pomoc√≠ funkƒçn√≠ho QR-Server API."
  },
  "gs-qrCodeAltern": {
    "prefix": "gs-qrCodeAltern",
    "body": [
      "/**",
      " * Alternativn√≠ funkce pro generov√°n√≠ QR k√≥du s v√≠ce mo≈ænostmi API.",
      " * Pokud jedna slu≈æba nefunguje, zkus√≠ dal≈°√≠.",
      " */",
      "function vygenerujQRKodAlternativni() {",
      "  var text = '${1:https://github.com/JaromirIhln}'; // Text pro QR k√≥d",
      "  var velikost = ${2:120}; // Velikost QR k√≥du v pixelech",
      "  ",
      "  // Seznam r≈Øzn√Ωch QR API slu≈æeb",
      "  var qrApis = [",
      "    {",
      "      name: 'QR-Server',",
      "      url: 'https://api.qrserver.com/v1/create-qr-code/?size=' + velikost + 'x' + velikost + '&data=' + encodeURIComponent(text)",
      "    },",
      "    {",
      "      name: 'QRCode-Monkey (ve≈ôejn√©)',",
      "      url: 'https://api.qrserver.com/v1/create-qr-code/?size=' + velikost + 'x' + velikost + '&format=png&data=' + encodeURIComponent(text)",
      "    }",
      "  ];",
      "  ",
      "  for (var i = 0; i < qrApis.length; i++) {",
      "    try {",
      "      Logger.log('üîÑ Zkou≈°√≠m API: ' + qrApis[i].name);",
      "      var response = UrlFetchApp.fetch(qrApis[i].url);",
      "      ",
      "      if (response.getResponseCode() === 200) {",
      "        var blob = response.getBlob();",
      "        var sheet = SpreadsheetApp.getActiveSheet();",
      "        sheet.insertImage(blob, ${3:2}, ${4:4}); // ≈ò√°dek, sloupec",
      "        ",
      "        SpreadsheetApp.getActiveSpreadsheet().toast('QR k√≥d vygenerov√°n pomoc√≠ ' + qrApis[i].name + '!', 'Hotovo', 3);",
      "        Logger.log('‚úÖ QR k√≥d √∫spƒõ≈°nƒõ vygenerov√°n pomoc√≠: ' + qrApis[i].name);",
      "        return; // √öspƒõch, konƒç√≠me",
      "      }",
      "    } catch (error) {",
      "      Logger.log('‚ùå API ' + qrApis[i].name + ' selhalo: ' + error.toString());",
      "      continue; // Zkus√≠me dal≈°√≠ API",
      "    }",
      "  }",
      "  ",
      "  // Pokud v≈°echna API selhala",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('V≈°echna QR API selhala. Zkuste to pozdƒõji.', 'Chyba', 5);",
      "  Logger.log('‚ùå V≈°echna QR API selhala');",
      "}"
    ],
    "description": "Vlo≈æ√≠ robustn√≠ funkci pro generov√°n√≠ QR k√≥du s fallback mechanismem."
  },
  "gs-barcode128": {
    "prefix": "gsbarcode128",
    "body": [
      "/**",
      " * Generuje Code 128 barcode pro zadan√Ω text.",
      " * Pou≈æ√≠v√° r≈Øzn√° API pro generov√°n√≠ ƒç√°rov√Ωch k√≥d≈Ø.",
      " */",
      "function vygenerujBarcode128() {",
      "  var text = '${1:1234567890}'; // Text pro barcode (ƒç√≠sla, p√≠smena, speci√°ln√≠ znaky)",
      "  var sirka = ${2:200}; // ≈†√≠≈ôka barcodu v pixelech",
      "  var vyska = ${3:50}; // V√Ω≈°ka barcodu v pixelech",
      "  ",
      "  // Seznam r≈Øzn√Ωch Barcode API slu≈æeb",
      "  var barcodeApis = [",
      "    {",
      "      name: 'Barcode-Generator API',",
      "      url: 'https://barcodeapi.org/api/code128/' + encodeURIComponent(text) + '?width=' + sirka + '&height=' + vyska",
      "    },",
      "    {",
      "      name: 'QR-Server Barcode',",
      "      url: 'https://api.qrserver.com/v1/create-qr-code/?size=' + sirka + 'x' + vyska + '&format=png&qzone=0&data=' + encodeURIComponent(text)",
      "    }",
      "  ];",
      "  ",
      "  for (var i = 0; i < barcodeApis.length; i++) {",
      "    try {",
      "      Logger.log('üîÑ Zkou≈°√≠m Barcode API: ' + barcodeApis[i].name);",
      "      var response = UrlFetchApp.fetch(barcodeApis[i].url);",
      "      ",
      "      if (response.getResponseCode() === 200) {",
      "        var blob = response.getBlob();",
      "        var sheet = SpreadsheetApp.getActiveSheet();",
      "        sheet.insertImage(blob, ${4:2}, ${5:6}); // ≈ò√°dek, sloupec",
      "        ",
      "        SpreadsheetApp.getActiveSpreadsheet().toast('Code 128 barcode vygenerov√°n pomoc√≠ ' + barcodeApis[i].name + '!', 'Hotovo', 3);",
      "        Logger.log('‚úÖ Barcode √∫spƒõ≈°nƒõ vygenerov√°n pomoc√≠: ' + barcodeApis[i].name);",
      "        Logger.log('üìä Barcode data: ' + text);",
      "        return; // √öspƒõch, konƒç√≠me",
      "      }",
      "    } catch (error) {",
      "      Logger.log('‚ùå Barcode API ' + barcodeApis[i].name + ' selhalo: ' + error.toString());",
      "      continue; // Zkus√≠me dal≈°√≠ API",
      "    }",
      "  }",
      "  ",
      "  // Pokud v≈°echna API selhala",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('V≈°echna Barcode API selhala. Zkuste to pozdƒõji.', 'Chyba', 5);",
      "  Logger.log('‚ùå V≈°echna Barcode API selhala');",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro generov√°n√≠ Code 128 barcodu s fallback mechanismem."
  },
  "gs-deleteLastImg": {
    "prefix": "gs-deleteLastImg",
    "body": [
      "/**",
      " * Sma≈æe pouze poslednƒõ p≈ôidan√Ω obr√°zek.",
      " */",
      "function smazatPosledniObrazek() {",
      "  var sheet = SpreadsheetApp.getActiveSheet();",
      "  var images = sheet.getImages();",
      "  ",
      "  if (images.length === 0) {",
      "    SpreadsheetApp.getActiveSpreadsheet().toast('≈Ω√°dn√© obr√°zky k smaz√°n√≠.', 'Info', 2);",
      "    return;",
      "  }",
      "  ",
      "  // Sma≈æ posledn√≠ obr√°zek (poslednƒõ p≈ôidan√Ω)",
      "  images[images.length - 1].remove();",
      "  ",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('Posledn√≠ obr√°zek smaz√°n.', 'Hotovo', 2);",
      "  Logger.log('‚úÖ Posledn√≠ obr√°zek smaz√°n');",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro smaz√°n√≠ pouze posledn√≠ho p≈ôidan√©ho obr√°zku."
  },
  "gs-deleteAllImg": {
    "prefix": "gs-deleteAllImg",
    "body": [
      "/**",
      " * Sma≈æe v≈°echny obr√°zky (vƒçetnƒõ QR k√≥d≈Ø) z aktivn√≠ho sheetu.",
      " */",
      "function smazatVsechnyObrazky() {",
      "  var sheet = SpreadsheetApp.getActiveSheet();",
      "  var images = sheet.getImages();",
      "  ",
      "  Logger.log('üîç Nalezeno obr√°zk≈Ø k smaz√°n√≠: ' + images.length);",
      "  ",
      "  if (images.length === 0) {",
      "    SpreadsheetApp.getActiveSpreadsheet().toast('≈Ω√°dn√© obr√°zky k smaz√°n√≠.', 'Info', 2);",
      "    return;",
      "  }",
      "  ",
      "  // Sma≈æ v≈°echny obr√°zky",
      "  for (var i = 0; i < images.length; i++) {",
      "    images[i].remove();",
      "  }",
      "  ",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('Smaz√°no ' + images.length + ' obr√°zk≈Ø.', 'Hotovo', 3);",
      "  Logger.log('‚úÖ √öspƒõ≈°nƒõ smaz√°no ' + images.length + ' obr√°zk≈Ø');",
      "}"
    ],
    "description": "Vlo≈æ√≠ funkci pro smaz√°n√≠ v≈°ech obr√°zk≈Ø z aktivn√≠ho sheetu."
  },
  "gs-toastNotify": {
    "prefix": "gs-toastNotify",
    "body": [
      "/**",
      " * Syst√©m toast notifikac√≠ s r≈Øzn√Ωmi typy zpr√°v.",
      " */",
      "function zobrazNotifikaci() {",
      "  var spreadsheet = SpreadsheetApp.getActiveSpreadsheet();",
      "  ",
      "  // R≈Øzn√© typy notifikac√≠",
      "  spreadsheet.toast('‚úÖ Operace dokonƒçena √∫spƒõ≈°nƒõ!', '√öspƒõch', 3);",
      "  ",
      "  Utilities.sleep(4000);",
      "  spreadsheet.toast('‚ö†Ô∏è Varov√°n√≠: Zkontrolujte data!', 'Varov√°n√≠', 5);",
      "  ",
      "  Utilities.sleep(6000);",
      "  spreadsheet.toast('‚ùå Chyba p≈ôi zpracov√°n√≠!', 'Chyba', 8);",
      "  ",
      "  Utilities.sleep(9000);",
      "  spreadsheet.toast('‚ÑπÔ∏è Informace: Proces bƒõ≈æ√≠ na pozad√≠', 'Info', 4);",
      "}",
      "",
      "// Pomocn√© funkce pro rychl√© pou≈æit√≠",
      "function uspechNotifikace(zprava) {",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('‚úÖ ' + zprava, '√öspƒõch', 3);",
      "}",
      "",
      "function chybaNotifikace(zprava) {",
      "  SpreadsheetApp.getActiveSpreadsheet().toast('‚ùå ' + zprava, 'Chyba', 8);",
      "}"
    ],
    "description": "üîî Syst√©m toast notifikac√≠ s r≈Øzn√Ωmi typy zpr√°v a pomocn√Ωmi funkcemi."
  },
  "gs-debugSystem": {
    "prefix": "gsdebug",
    "body": [
      "/**",
      " * Pokroƒçil√Ω debugging syst√©m s error handling a detailn√≠m logov√°n√≠m.",
      " */",
      "function pokrocileDebugovani() {",
      "  var startTime = new Date();",
      "  var funkceNazev = 'pokrocileDebugovani';",
      "  ",
      "  try {",
      "    debugLog('üöÄ START', funkceNazev + ' spu≈°tƒõno');",
      "    ",
      "    // Simulace pr√°ce s daty",
      "    var data = SpreadsheetApp.getActiveSheet().getDataRange().getValues();",
      "    debugLog('üìä DATA', 'Naƒçteno ' + data.length + ' ≈ô√°dk≈Ø');",
      "    ",
      "    // Simulace mo≈æn√© chyby",
      "    if (data.length === 0) {",
      "      throw new Error('≈Ω√°dn√° data k zpracov√°n√≠');",
      "    }",
      "    ",
      "    // √öspƒõ≈°n√© dokonƒçen√≠",
      "    var endTime = new Date();",
      "    var duration = endTime - startTime;",
      "    debugLog('‚úÖ SUCCESS', funkceNazev + ' dokonƒçeno za ' + duration + 'ms');",
      "    ",
      "  } catch (error) {",
      "    errorLog(funkceNazev, error);",
      "    throw error; // Re-throw pro dal≈°√≠ zpracov√°n√≠",
      "  }",
      "}",
      "",
      "function debugLog(typ, zprava) {",
      "  var timestamp = new Date().toLocaleString();",
      "  Logger.log('[' + timestamp + '] ' + typ + ': ' + zprava);",
      "}",
      "",
      "function errorLog(funkce, error) {",
      "  var timestamp = new Date().toLocaleString();",
      "  Logger.log('üö® [' + timestamp + '] ERROR in ' + funkce + ':');",
      "  Logger.log('   Message: ' + error.message);",
      "  Logger.log('   Stack: ' + error.stack);",
      "}"
    ],
    "description": "üêõ Pokroƒçil√Ω debugging syst√©m s error handling a strukturovan√Ωm logov√°n√≠m."
  },
  "gs-dataValidation": {
    "prefix": "gs-inputValidation",
    "body": [
      "/**",
      " * Syst√©m validace dat s r≈Øzn√Ωmi typy kontrol.",
      " */",
      "function validujData() {",
      "  var sheet = SpreadsheetApp.getActiveSheet();",
      "  var data = sheet.getDataRange().getValues();",
      "  var chyby = [];",
      "  ",
      "  for (var i = 1; i < data.length; i++) { // P≈ôeskoƒçit hlaviƒçku",
      "    var radek = data[i];",
      "    var chybyRadku = [];",
      "    ",
      "    // Validace emailu (sloupec A)",
      "    if (!validujEmail(radek[0])) {",
      "      chybyRadku.push('Neplatn√Ω email');",
      "    }",
      "    ",
      "    // Validace ƒç√≠sla (sloupec B)",
      "    if (!validujCislo(radek[1])) {",
      "      chybyRadku.push('Neplatn√© ƒç√≠slo');",
      "    }",
      "    ",
      "    // Validace datumu (sloupec C)",
      "    if (!validujDatum(radek[2])) {",
      "      chybyRadku.push('Neplatn√© datum');",
      "    }",
      "    ",
      "    if (chybyRadku.length > 0) {",
      "      chyby.push('≈ò√°dek ' + (i + 1) + ': ' + chybyRadku.join(', '));",
      "    }",
      "  }",
      "  ",
      "  if (chyby.length > 0) {",
      "    Logger.log('‚ùå Nalezeny chyby:');",
      "    chyby.forEach(function(chyba) {",
      "      Logger.log('  ‚Ä¢ ' + chyba);",
      "    });",
      "    SpreadsheetApp.getActiveSpreadsheet().toast('Nalezeno ' + chyby.length + ' chyb!', 'Validace', 5);",
      "  } else {",
      "    Logger.log('‚úÖ V≈°echna data jsou validn√≠!');",
      "    SpreadsheetApp.getActiveSpreadsheet().toast('V≈°echna data jsou v po≈ô√°dku!', 'Validace OK', 3);",
      "  }",
      "}",
      "",
      "function validujEmail(email) {",
      "  var regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;",
      "  return email && regex.test(email.toString());",
      "}",
      "",
      "function validujCislo(cislo) {",
      "  return !isNaN(cislo) && cislo !== '';",
      "}",
      "",
      "function validujDatum(datum) {",
      "  return datum instanceof Date && !isNaN(datum);",
      "}"
    ],
    "description": "‚úÖ Komplexn√≠ syst√©m validace dat s kontrolou email≈Ø, ƒç√≠sel a datum≈Ø."
  }
}

